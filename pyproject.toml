[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "monzoh"
version = "1.2.0"
description = "A Python library for the Monzo Developer API"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Sam Dobson", email = "1309834+samdobson@users.noreply.github.com"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.10"
dependencies = [
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "nox>=2023.4.22",
    "interrogate>=1.7.0",
    "pydoclint>=0.3.0",
]

[project.scripts]
monzoh-auth = "monzoh.cli:main"

[project.urls]
Homepage = "https://github.com/samdobson/monzoh"
Repository = "https://github.com/samdobson/monzoh.git"
Issues = "https://github.com/samdobson/monzoh/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/monzoh"]

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
select = ["ALL"]
ignore = ["D107", "SLF001", "ANN401", "PLC0415", "COM812"]
pydocstyle.convention = "google"

[tool.ruff.lint.per-file-ignores]
"src/monzoh/cli/*" = ["T201"]
"tests/*" = ["S101", "S105", "S106", "PLR2004"]
"**/auth.py" = ["PLR2004"]
"**/core/*.py" = ["PLR2004"]
"**/exceptions.py" = ["PLR2004"]

[tool.mypy]
python_version = "3.10"
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=monzoh --cov-report=term-missing"
testpaths = [
    "tests",
]
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
source = ["src/monzoh"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\(Protocol\\):",
    "@(abc\\\\.)?abstractmethod",
]

[tool.pydoclint]
style = "google"
arg-type-hints-in-docstring = false
check-return-types = false

